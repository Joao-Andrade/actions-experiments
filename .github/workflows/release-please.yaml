name: "Release please an app"
# Copied first from inno-contentful annd adapted to work with contentful-storybook
# NOT tested with node stuff yet, although it should be fine at least for inno-contentful repository.

on:
  workflow_call:
    inputs:
      package:
        description: 'Package/application name for the releases'
        required: true
        type: string
      path:
        description: 'Path from where it will create a release'
        required: true
        type: string
      release-type:
        description: 'What type of release is this. Supported values: "node", "simple".'
        default: 'node'
        required: false
        type: string
      use-monorepo-tags:
        description: "Add prefix to tags and branches, allowing multiple libraries to be released from the same repository."
        required: false
        default: true
        type: boolean
      version-file:
        description: 'Path to file that contains the version to increment. Usually useful for type "simple."'
        required: false
        default: "version.txt"
        type: string
    outputs:
      release_created:
        description: "Whether a release was created or not boolean string"
        value: ${{ jobs.release-please.outputs.release_created }}
      version_tag:
        description: "Released semver version string or version found in package.json if no release was created"
        value: ${{ jobs.release-please.outputs.version_tag }}

jobs:
  release-please:
    outputs:
      release_created: ${{ steps.release_info.outputs.value || false }}
      version_tag: ${{ steps.version_tag.outputs.value }}
    runs-on: ubuntu-latest
    steps:
      - id: check_inputs
        run: |
          case ${{ inputs.release-type }} in
            node|simple)
              echo "Release type valid.";;
            *)
              echo "Release type must be: 'node', 'simple'."
              exit 1;;
          esac

      - uses: google-github-actions/release-please-action@v3
        id: release-node
        if: ${{ inputs.release-type == 'node' }}
        with:
          release-type: ${{ inputs.release-type }}
          package-name: ${{ inputs.package }}
          path: ${{ inputs.path }}
          monorepo-tags: ${{ inputs.use-monorep-tags }}

      - uses: google-github-actions/release-please-action@v3
        id: release-simple
        if: ${{ inputs.release-type == 'simple' }}
        with:
          release-type: ${{ inputs.release-type }}
          package-name: ${{ inputs.package }}
          path: ${{ inputs.path }}
          monorepo-tags: ${{ inputs.use-monorep-tags }}
          version-file: ${{ inputs.version-file }}

      - id: release_info
        run: |
          release_created=${{ steps[format('release-{0}', inputs.release-type)].outputs[format('{0}--release_created', inputs.path)] }}
          echo "release_created=$release_created" >> $GITHUB_OUTPUT
          if [ "$release_created" == "true" ]; then
            echo "major=${{ steps[format('release-{0}', inputs.release-type)].outputs[format('{0}--major',inputs.path)] }}" >> $GITHUB_OUTPUT
            echo "minor=${{ steps[format('release-{0}', inputs.release-type)].outputs[format('{0}--minor',inputs.path)] }}" >> $GITHUB_OUTPUT
            echo "patch=${{ steps[format('release-{0}', inputs.release-type)].outputs[format('{0}--patch',inputs.path)] }}" >> $GITHUB_OUTPUT
          fi

      - uses: actions/checkout@v3
        id: git_checkout

      - uses: ashley-taylor/read-json-property-action@v1.0
        id: package-json-version
        with:
          path: "${{ inputs.path }}/package.json"
          property: version

      - run: echo "value=${{ format('{0}.{1}.{2}',steps.release_info.outputs.major,steps.release_info.outputs.minor,steps.release_info.outputs.patch) }}" >> $GITHUB_OUTPUT
        if: ${{ steps.release_info.outputs.release_created == 'true' }}
        id: released_version

      - run: echo "value=${{ steps.release_info.outputs.release_created == 'true' && steps.released_version.outputs.value || steps.package-json-version.outputs.value }}" >> $GITHUB_OUTPUT
        id: version_tag
